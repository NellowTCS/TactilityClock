name: "Download Latest SDK"
description: "Download the latest Tactility SDK artifacts from GitHub Actions"
inputs:
  github-token:
    description: "GitHub Personal Access Token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Get latest successful workflow run
      shell: bash
      id: get-run
      run: |
        response=$(curl -s -H "Authorization: token ${{ inputs.github-token }}" \
          "https://api.github.com/repos/NellowTCS/Tactility/actions/workflows/build-sdk.yml/runs?per_page=1&status=success")
        run_id=$(echo $response | jq -r '.workflow_runs[0].id')
        echo "run_id=$run_id" >> $GITHUB_OUTPUT

    - name: Get artifacts
      shell: bash
      run: |
        response=$(curl -s -H "Authorization: token ${{ inputs.github-token }}" \
          "https://api.github.com/repos/NellowTCS/Tactility/actions/runs/${{ steps.get-run.outputs.run_id }}/artifacts")
        echo "$response" > artifacts.json

    - name: Download and extract Tactility SDK artifacts
      shell: bash
      run: |
        for platform in esp32 esp32s3; do
          download_url=$(cat artifacts.json | jq -r ".artifacts[] | select(.name == \"TactilitySDK-${platform}\") | .archive_download_url")
          if [ -n "$download_url" ]; then
            temp_zip=$(mktemp)
            curl -L -H "Authorization: token ${{ inputs.github-token }}" -o "$temp_zip" "$download_url"

            target_dir="tactility-src/.tactility/0.6.0-SNAPSHOT10-${platform}/TactilitySDK"
            mkdir -p "$target_dir"

            # Extract into temporary dir
            temp_dir=$(mktemp -d)
            unzip -q "$temp_zip" -d "$temp_dir"
            
            # Move root contents directly to target directory
            mv "$temp_dir"/* "$target_dir"/

            rm -rf "$temp_dir" "$temp_zip"

            echo "Downloaded and extracted TactilitySDK-$platform to $target_dir"
          else
            echo "TactilitySDK-$platform not found"
            exit 1
          fi
        done

    - name: Cleanup
      shell: bash
      run: rm -f artifacts.json
